{
  "source_base_path": "/Users/francescojr.venditti/GitHub/Refinity",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Resource",
      "output": {
        "resource": {
          "relative_path": "index.json"
        }
      }
    },
    {
      "type": "Conceptual",
      "source_relative_path": "README.md",
      "output": {
        ".html": {
          "relative_path": "README.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "Refinity/README.md",
      "output": {
        ".html": {
          "relative_path": "Refinity/README.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Benchmark.BenchmarkUtility.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Benchmark.BenchmarkUtility.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Benchmark.Enums.BenchmarkResult.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Benchmark.Enums.BenchmarkResult.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Benchmark.Enums.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Benchmark.Enums.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Benchmark.Models.BenchmarkModels.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Benchmark.Models.BenchmarkModels.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Benchmark.Models.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Benchmark.Models.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Benchmark.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Benchmark.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Conversion.ConvertUtility.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Conversion.ConvertUtility.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Conversion.LogEntry.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Conversion.LogEntry.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Conversion.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Conversion.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.CoordinateModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.CoordinateModel.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Date.DateDifference.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Date.DateDifference.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Date.DateRangeModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Date.DateRangeModel.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Date.DateUtility.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Date.DateUtility.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Date.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Date.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.DateDifference.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.DateDifference.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumBenchmarkResult.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumBenchmarkResult.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumColor.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumColor.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumCurrency.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumCurrency.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumFileTypes.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumFileTypes.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumLanguageCodes.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumLanguageCodes.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumLogLevel.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumLogLevel.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumMonths.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumMonths.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumPressureUnits.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumPressureUnits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumScaleGrams.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumScaleGrams.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumScaleJoules.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumScaleJoules.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumScaleLiters.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumScaleLiters.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumScaleMeters.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumScaleMeters.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumScaleMiles.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumScaleMiles.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumScaleOnces.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumScaleOnces.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumScalePascal.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumScalePascal.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumScaleTime.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumScaleTime.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumScaleVolts.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumScaleVolts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumScaleWatts.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumScaleWatts.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumTemperatureUnits.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumTemperatureUnits.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumUnitSystem.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumUnitSystem.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumWeekDays.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumWeekDays.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumWeekDaysShort.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumWeekDaysShort.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.EnumsUtility.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.EnumsUtility.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Enums.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Enums.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Finance.FinanceUtility.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Finance.FinanceUtility.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Finance.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Finance.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Geometry.CoordinateModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Geometry.CoordinateModel.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Geometry.GeometryUtility.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Geometry.GeometryUtility.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Geometry.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Geometry.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Logging.Enums.LogFileType.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Logging.Enums.LogFileType.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Logging.Enums.LogLevel.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Logging.Enums.LogLevel.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Logging.Enums.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Logging.Enums.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Logging.LoggingUtility.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Logging.LoggingUtility.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Logging.Models.LogColorHelper.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Logging.Models.LogColorHelper.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Logging.Models.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Logging.Models.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Logging.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Logging.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Math.LinearRegressionModel.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Math.LinearRegressionModel.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Math.MathUtility.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Math.MathUtility.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Math.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Math.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Strings.StringsUtility.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Strings.StringsUtility.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.Strings.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.Strings.html"
        }
      },
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/Refinity.yml",
      "output": {
        ".html": {
          "relative_path": "api/Refinity.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/toc.html"
        },
        ".json": {
          "relative_path": "api/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/getting-started.md",
      "output": {
        ".html": {
          "relative_path": "docs/getting-started.html"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "docs/installation.md",
      "output": {
        ".html": {
          "relative_path": "docs/installation.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "docs/toc.yml",
      "output": {
        ".html": {
          "relative_path": "docs/toc.html"
        },
        ".json": {
          "relative_path": "docs/toc.json"
        }
      },
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html"
        }
      },
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html"
        },
        ".json": {
          "relative_path": "toc.json"
        }
      },
      "version": ""
    }
  ],
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}