### YamlMime:ManagedReference
items:
- uid: Refinity.Strings.StringsUtility
  commentId: T:Refinity.Strings.StringsUtility
  id: StringsUtility
  parent: Refinity.Strings
  children:
  - Refinity.Strings.StringsUtility.FromBase64(System.String)
  - Refinity.Strings.StringsUtility.FromBase64(System.String,System.Text.Encoding)
  - Refinity.Strings.StringsUtility.IsPalindrome(System.String)
  - Refinity.Strings.StringsUtility.RemoveHTMLTags(System.String)
  - Refinity.Strings.StringsUtility.RemoveNewLines(System.String)
  - Refinity.Strings.StringsUtility.RemoveNewLines(System.String,System.Boolean)
  - Refinity.Strings.StringsUtility.RemoveTabs(System.String)
  - Refinity.Strings.StringsUtility.RemoveTabs(System.String,System.Boolean)
  - Refinity.Strings.StringsUtility.RemoveWhitespace(System.String)
  - Refinity.Strings.StringsUtility.RemoveWhitespace(System.String,System.Boolean)
  - Refinity.Strings.StringsUtility.RemoveWhitespace(System.String,System.Boolean,System.Boolean)
  - Refinity.Strings.StringsUtility.Reverse(System.String)
  - Refinity.Strings.StringsUtility.SplitCamelCase(System.String)
  - Refinity.Strings.StringsUtility.ToBase64(System.String)
  - Refinity.Strings.StringsUtility.ToBase64(System.String,System.Text.Encoding)
  - Refinity.Strings.StringsUtility.ToPascalCase(System.String)
  - Refinity.Strings.StringsUtility.Truncate(System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: StringsUtility
  nameWithType: StringsUtility
  fullName: Refinity.Strings.StringsUtility
  type: Class
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: StringsUtility
    path: Refinity/Strings/StringsUtility.cs
    startLine: 6
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  syntax:
    content: public static class StringsUtility
    content.vb: Public Module StringsUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Refinity.Strings.StringsUtility.RemoveWhitespace(System.String)
  commentId: M:Refinity.Strings.StringsUtility.RemoveWhitespace(System.String)
  id: RemoveWhitespace(System.String)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: RemoveWhitespace(string)
  nameWithType: StringsUtility.RemoveWhitespace(string)
  fullName: Refinity.Strings.StringsUtility.RemoveWhitespace(string)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: RemoveWhitespace
    path: Refinity/Strings/StringsUtility.cs
    startLine: 13
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Removes all whitespace characters from the input string.
  example: []
  syntax:
    content: public static string RemoveWhitespace(this string input)
    parameters:
    - id: input
      type: System.String
      description: The string to remove whitespace from.
    return:
      type: System.String
      description: A new string with all whitespace characters removed.
    content.vb: Public Shared Function RemoveWhitespace(input As String) As String
  overload: Refinity.Strings.StringsUtility.RemoveWhitespace*
  nameWithType.vb: StringsUtility.RemoveWhitespace(String)
  fullName.vb: Refinity.Strings.StringsUtility.RemoveWhitespace(String)
  name.vb: RemoveWhitespace(String)
- uid: Refinity.Strings.StringsUtility.RemoveWhitespace(System.String,System.Boolean)
  commentId: M:Refinity.Strings.StringsUtility.RemoveWhitespace(System.String,System.Boolean)
  id: RemoveWhitespace(System.String,System.Boolean)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: RemoveWhitespace(string, bool)
  nameWithType: StringsUtility.RemoveWhitespace(string, bool)
  fullName: Refinity.Strings.StringsUtility.RemoveWhitespace(string, bool)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: RemoveWhitespace
    path: Refinity/Strings/StringsUtility.cs
    startLine: 26
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Removes whitespace characters from a string.
  example: []
  syntax:
    content: public static string RemoveWhitespace(this string input, bool removeNewLines)
    parameters:
    - id: input
      type: System.String
      description: The input string.
    - id: removeNewLines
      type: System.Boolean
      description: A flag indicating whether to remove new line characters.
    return:
      type: System.String
      description: The input string with whitespace characters removed.
    content.vb: Public Shared Function RemoveWhitespace(input As String, removeNewLines As Boolean) As String
  overload: Refinity.Strings.StringsUtility.RemoveWhitespace*
  nameWithType.vb: StringsUtility.RemoveWhitespace(String, Boolean)
  fullName.vb: Refinity.Strings.StringsUtility.RemoveWhitespace(String, Boolean)
  name.vb: RemoveWhitespace(String, Boolean)
- uid: Refinity.Strings.StringsUtility.RemoveWhitespace(System.String,System.Boolean,System.Boolean)
  commentId: M:Refinity.Strings.StringsUtility.RemoveWhitespace(System.String,System.Boolean,System.Boolean)
  id: RemoveWhitespace(System.String,System.Boolean,System.Boolean)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: RemoveWhitespace(string, bool, bool)
  nameWithType: StringsUtility.RemoveWhitespace(string, bool, bool)
  fullName: Refinity.Strings.StringsUtility.RemoveWhitespace(string, bool, bool)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: RemoveWhitespace
    path: Refinity/Strings/StringsUtility.cs
    startLine: 49
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Removes whitespace characters from a string.
  example: []
  syntax:
    content: public static string RemoveWhitespace(this string input, bool removeNewLines, bool removeTabs)
    parameters:
    - id: input
      type: System.String
      description: The input string.
    - id: removeNewLines
      type: System.Boolean
      description: Specifies whether to remove new line characters.
    - id: removeTabs
      type: System.Boolean
      description: Specifies whether to remove tab characters.
    return:
      type: System.String
      description: The input string with whitespace characters removed.
    content.vb: Public Shared Function RemoveWhitespace(input As String, removeNewLines As Boolean, removeTabs As Boolean) As String
  overload: Refinity.Strings.StringsUtility.RemoveWhitespace*
  nameWithType.vb: StringsUtility.RemoveWhitespace(String, Boolean, Boolean)
  fullName.vb: Refinity.Strings.StringsUtility.RemoveWhitespace(String, Boolean, Boolean)
  name.vb: RemoveWhitespace(String, Boolean, Boolean)
- uid: Refinity.Strings.StringsUtility.RemoveNewLines(System.String)
  commentId: M:Refinity.Strings.StringsUtility.RemoveNewLines(System.String)
  id: RemoveNewLines(System.String)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: RemoveNewLines(string)
  nameWithType: StringsUtility.RemoveNewLines(string)
  fullName: Refinity.Strings.StringsUtility.RemoveNewLines(string)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: RemoveNewLines
    path: Refinity/Strings/StringsUtility.cs
    startLine: 82
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Removes all new line characters from the input string.
  example: []
  syntax:
    content: public static string RemoveNewLines(this string input)
    parameters:
    - id: input
      type: System.String
      description: The input string.
    return:
      type: System.String
      description: The input string without any new line characters.
    content.vb: Public Shared Function RemoveNewLines(input As String) As String
  overload: Refinity.Strings.StringsUtility.RemoveNewLines*
  nameWithType.vb: StringsUtility.RemoveNewLines(String)
  fullName.vb: Refinity.Strings.StringsUtility.RemoveNewLines(String)
  name.vb: RemoveNewLines(String)
- uid: Refinity.Strings.StringsUtility.RemoveNewLines(System.String,System.Boolean)
  commentId: M:Refinity.Strings.StringsUtility.RemoveNewLines(System.String,System.Boolean)
  id: RemoveNewLines(System.String,System.Boolean)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: RemoveNewLines(string, bool)
  nameWithType: StringsUtility.RemoveNewLines(string, bool)
  fullName: Refinity.Strings.StringsUtility.RemoveNewLines(string, bool)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: RemoveNewLines
    path: Refinity/Strings/StringsUtility.cs
    startLine: 95
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Removes new lines and optionally tabs from the input string.
  example: []
  syntax:
    content: public static string RemoveNewLines(this string input, bool removeTabs)
    parameters:
    - id: input
      type: System.String
      description: The input string.
    - id: removeTabs
      type: System.Boolean
      description: Specifies whether to remove tabs as well.
    return:
      type: System.String
      description: The input string with new lines and tabs removed.
    content.vb: Public Shared Function RemoveNewLines(input As String, removeTabs As Boolean) As String
  overload: Refinity.Strings.StringsUtility.RemoveNewLines*
  nameWithType.vb: StringsUtility.RemoveNewLines(String, Boolean)
  fullName.vb: Refinity.Strings.StringsUtility.RemoveNewLines(String, Boolean)
  name.vb: RemoveNewLines(String, Boolean)
- uid: Refinity.Strings.StringsUtility.RemoveTabs(System.String)
  commentId: M:Refinity.Strings.StringsUtility.RemoveTabs(System.String)
  id: RemoveTabs(System.String)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: RemoveTabs(string)
  nameWithType: StringsUtility.RemoveTabs(string)
  fullName: Refinity.Strings.StringsUtility.RemoveTabs(string)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: RemoveTabs
    path: Refinity/Strings/StringsUtility.cs
    startLine: 116
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Removes all tab characters from the input string.
  example: []
  syntax:
    content: public static string RemoveTabs(this string input)
    parameters:
    - id: input
      type: System.String
      description: The input string.
    return:
      type: System.String
      description: A new string with all tab characters removed.
    content.vb: Public Shared Function RemoveTabs(input As String) As String
  overload: Refinity.Strings.StringsUtility.RemoveTabs*
  nameWithType.vb: StringsUtility.RemoveTabs(String)
  fullName.vb: Refinity.Strings.StringsUtility.RemoveTabs(String)
  name.vb: RemoveTabs(String)
- uid: Refinity.Strings.StringsUtility.RemoveTabs(System.String,System.Boolean)
  commentId: M:Refinity.Strings.StringsUtility.RemoveTabs(System.String,System.Boolean)
  id: RemoveTabs(System.String,System.Boolean)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: RemoveTabs(string, bool)
  nameWithType: StringsUtility.RemoveTabs(string, bool)
  fullName: Refinity.Strings.StringsUtility.RemoveTabs(string, bool)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: RemoveTabs
    path: Refinity/Strings/StringsUtility.cs
    startLine: 129
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Removes tabs and optionally new lines from a string.
  example: []
  syntax:
    content: public static string RemoveTabs(this string input, bool removeNewLines)
    parameters:
    - id: input
      type: System.String
      description: The input string.
    - id: removeNewLines
      type: System.Boolean
      description: A boolean value indicating whether to remove new lines.
    return:
      type: System.String
      description: The modified string with tabs and new lines removed.
    content.vb: Public Shared Function RemoveTabs(input As String, removeNewLines As Boolean) As String
  overload: Refinity.Strings.StringsUtility.RemoveTabs*
  nameWithType.vb: StringsUtility.RemoveTabs(String, Boolean)
  fullName.vb: Refinity.Strings.StringsUtility.RemoveTabs(String, Boolean)
  name.vb: RemoveTabs(String, Boolean)
- uid: Refinity.Strings.StringsUtility.RemoveHTMLTags(System.String)
  commentId: M:Refinity.Strings.StringsUtility.RemoveHTMLTags(System.String)
  id: RemoveHTMLTags(System.String)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: RemoveHTMLTags(string)
  nameWithType: StringsUtility.RemoveHTMLTags(string)
  fullName: Refinity.Strings.StringsUtility.RemoveHTMLTags(string)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: RemoveHTMLTags
    path: Refinity/Strings/StringsUtility.cs
    startLine: 150
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Removes HTML tags from a string.
  example: []
  syntax:
    content: public static string RemoveHTMLTags(this string input)
    parameters:
    - id: input
      type: System.String
      description: The input string.
    return:
      type: System.String
      description: The string with HTML tags removed.
    content.vb: Public Shared Function RemoveHTMLTags(input As String) As String
  overload: Refinity.Strings.StringsUtility.RemoveHTMLTags*
  nameWithType.vb: StringsUtility.RemoveHTMLTags(String)
  fullName.vb: Refinity.Strings.StringsUtility.RemoveHTMLTags(String)
  name.vb: RemoveHTMLTags(String)
- uid: Refinity.Strings.StringsUtility.Reverse(System.String)
  commentId: M:Refinity.Strings.StringsUtility.Reverse(System.String)
  id: Reverse(System.String)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: Reverse(string)
  nameWithType: StringsUtility.Reverse(string)
  fullName: Refinity.Strings.StringsUtility.Reverse(string)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: Reverse
    path: Refinity/Strings/StringsUtility.cs
    startLine: 160
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Reverses the characters in a string.
  example: []
  syntax:
    content: public static string Reverse(this string input)
    parameters:
    - id: input
      type: System.String
      description: The string to be reversed.
    return:
      type: System.String
      description: The reversed string.
    content.vb: Public Shared Function Reverse(input As String) As String
  overload: Refinity.Strings.StringsUtility.Reverse*
  nameWithType.vb: StringsUtility.Reverse(String)
  fullName.vb: Refinity.Strings.StringsUtility.Reverse(String)
  name.vb: Reverse(String)
- uid: Refinity.Strings.StringsUtility.Truncate(System.String,System.Int32)
  commentId: M:Refinity.Strings.StringsUtility.Truncate(System.String,System.Int32)
  id: Truncate(System.String,System.Int32)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: Truncate(string, int)
  nameWithType: StringsUtility.Truncate(string, int)
  fullName: Refinity.Strings.StringsUtility.Truncate(string, int)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: Truncate
    path: Refinity/Strings/StringsUtility.cs
    startLine: 173
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Truncates a string to the specified maximum length.
  example: []
  syntax:
    content: public static string Truncate(this string input, int maxLength)
    parameters:
    - id: input
      type: System.String
      description: The input string.
    - id: maxLength
      type: System.Int32
      description: The maximum length to truncate the string.
    return:
      type: System.String
      description: The truncated string.
    content.vb: Public Shared Function Truncate(input As String, maxLength As Integer) As String
  overload: Refinity.Strings.StringsUtility.Truncate*
  nameWithType.vb: StringsUtility.Truncate(String, Integer)
  fullName.vb: Refinity.Strings.StringsUtility.Truncate(String, Integer)
  name.vb: Truncate(String, Integer)
- uid: Refinity.Strings.StringsUtility.IsPalindrome(System.String)
  commentId: M:Refinity.Strings.StringsUtility.IsPalindrome(System.String)
  id: IsPalindrome(System.String)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: IsPalindrome(string)
  nameWithType: StringsUtility.IsPalindrome(string)
  fullName: Refinity.Strings.StringsUtility.IsPalindrome(string)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: IsPalindrome
    path: Refinity/Strings/StringsUtility.cs
    startLine: 190
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Determines whether a string is a palindrome.
  example: []
  syntax:
    content: public static bool IsPalindrome(this string input)
    parameters:
    - id: input
      type: System.String
      description: The string to check.
    return:
      type: System.Boolean
      description: True if the string is a palindrome; otherwise, false.
    content.vb: Public Shared Function IsPalindrome(input As String) As Boolean
  overload: Refinity.Strings.StringsUtility.IsPalindrome*
  nameWithType.vb: StringsUtility.IsPalindrome(String)
  fullName.vb: Refinity.Strings.StringsUtility.IsPalindrome(String)
  name.vb: IsPalindrome(String)
- uid: Refinity.Strings.StringsUtility.SplitCamelCase(System.String)
  commentId: M:Refinity.Strings.StringsUtility.SplitCamelCase(System.String)
  id: SplitCamelCase(System.String)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: SplitCamelCase(string)
  nameWithType: StringsUtility.SplitCamelCase(string)
  fullName: Refinity.Strings.StringsUtility.SplitCamelCase(string)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: SplitCamelCase
    path: Refinity/Strings/StringsUtility.cs
    startLine: 201
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Splits a camel case string into an array of strings.
  example: []
  syntax:
    content: public static string[] SplitCamelCase(this string input)
    parameters:
    - id: input
      type: System.String
      description: The camel case string to split.
    return:
      type: System.String[]
      description: An array of strings representing the split camel case string.
    content.vb: Public Shared Function SplitCamelCase(input As String) As String()
  overload: Refinity.Strings.StringsUtility.SplitCamelCase*
  nameWithType.vb: StringsUtility.SplitCamelCase(String)
  fullName.vb: Refinity.Strings.StringsUtility.SplitCamelCase(String)
  name.vb: SplitCamelCase(String)
- uid: Refinity.Strings.StringsUtility.ToPascalCase(System.String)
  commentId: M:Refinity.Strings.StringsUtility.ToPascalCase(System.String)
  id: ToPascalCase(System.String)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: ToPascalCase(string)
  nameWithType: StringsUtility.ToPascalCase(string)
  fullName: Refinity.Strings.StringsUtility.ToPascalCase(string)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: ToPascalCase
    path: Refinity/Strings/StringsUtility.cs
    startLine: 211
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Converts the specified string to title case.
  example: []
  syntax:
    content: public static string ToPascalCase(this string input)
    parameters:
    - id: input
      type: System.String
      description: The string to convert.
    return:
      type: System.String
      description: The specified string converted to title case.
    content.vb: Public Shared Function ToPascalCase(input As String) As String
  overload: Refinity.Strings.StringsUtility.ToPascalCase*
  nameWithType.vb: StringsUtility.ToPascalCase(String)
  fullName.vb: Refinity.Strings.StringsUtility.ToPascalCase(String)
  name.vb: ToPascalCase(String)
- uid: Refinity.Strings.StringsUtility.ToBase64(System.String)
  commentId: M:Refinity.Strings.StringsUtility.ToBase64(System.String)
  id: ToBase64(System.String)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: ToBase64(string)
  nameWithType: StringsUtility.ToBase64(string)
  fullName: Refinity.Strings.StringsUtility.ToBase64(string)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: ToBase64
    path: Refinity/Strings/StringsUtility.cs
    startLine: 221
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Converts a string to its Base64 representation.
  example: []
  syntax:
    content: public static string ToBase64(this string text)
    parameters:
    - id: text
      type: System.String
      description: The string to convert.
    return:
      type: System.String
      description: The Base64 representation of the input string.
    content.vb: Public Shared Function ToBase64(text As String) As String
  overload: Refinity.Strings.StringsUtility.ToBase64*
  nameWithType.vb: StringsUtility.ToBase64(String)
  fullName.vb: Refinity.Strings.StringsUtility.ToBase64(String)
  name.vb: ToBase64(String)
- uid: Refinity.Strings.StringsUtility.FromBase64(System.String)
  commentId: M:Refinity.Strings.StringsUtility.FromBase64(System.String)
  id: FromBase64(System.String)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: FromBase64(string)
  nameWithType: StringsUtility.FromBase64(string)
  fullName: Refinity.Strings.StringsUtility.FromBase64(string)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: FromBase64
    path: Refinity/Strings/StringsUtility.cs
    startLine: 232
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Converts a base64 encoded string to its original UTF-8 representation.
  example: []
  syntax:
    content: public static string FromBase64(this string base64)
    parameters:
    - id: base64
      type: System.String
      description: The base64 encoded string to convert.
    return:
      type: System.String
      description: The original UTF-8 representation of the base64 encoded string.
    content.vb: Public Shared Function FromBase64(base64 As String) As String
  overload: Refinity.Strings.StringsUtility.FromBase64*
  nameWithType.vb: StringsUtility.FromBase64(String)
  fullName.vb: Refinity.Strings.StringsUtility.FromBase64(String)
  name.vb: FromBase64(String)
- uid: Refinity.Strings.StringsUtility.ToBase64(System.String,System.Text.Encoding)
  commentId: M:Refinity.Strings.StringsUtility.ToBase64(System.String,System.Text.Encoding)
  id: ToBase64(System.String,System.Text.Encoding)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: ToBase64(string, Encoding)
  nameWithType: StringsUtility.ToBase64(string, Encoding)
  fullName: Refinity.Strings.StringsUtility.ToBase64(string, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: ToBase64
    path: Refinity/Strings/StringsUtility.cs
    startLine: 244
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Converts a string to its Base64 representation using the specified encoding.
  example: []
  syntax:
    content: public static string ToBase64(this string text, Encoding encoding)
    parameters:
    - id: text
      type: System.String
      description: The string to convert.
    - id: encoding
      type: System.Text.Encoding
      description: The encoding to use.
    return:
      type: System.String
      description: The Base64 representation of the input string.
    content.vb: Public Shared Function ToBase64(text As String, encoding As Encoding) As String
  overload: Refinity.Strings.StringsUtility.ToBase64*
  nameWithType.vb: StringsUtility.ToBase64(String, Encoding)
  fullName.vb: Refinity.Strings.StringsUtility.ToBase64(String, System.Text.Encoding)
  name.vb: ToBase64(String, Encoding)
- uid: Refinity.Strings.StringsUtility.FromBase64(System.String,System.Text.Encoding)
  commentId: M:Refinity.Strings.StringsUtility.FromBase64(System.String,System.Text.Encoding)
  id: FromBase64(System.String,System.Text.Encoding)
  isExtensionMethod: true
  parent: Refinity.Strings.StringsUtility
  langs:
  - csharp
  - vb
  name: FromBase64(string, Encoding)
  nameWithType: StringsUtility.FromBase64(string, Encoding)
  fullName: Refinity.Strings.StringsUtility.FromBase64(string, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: Refinity/Strings/StringsUtility.cs
      branch: main
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: FromBase64
    path: Refinity/Strings/StringsUtility.cs
    startLine: 256
  assemblies:
  - Refinity
  namespace: Refinity.Strings
  summary: Converts a Base64 encoded string to its original form using the specified encoding.
  example: []
  syntax:
    content: public static string FromBase64(this string base64, Encoding encoding)
    parameters:
    - id: base64
      type: System.String
      description: The Base64 encoded string to convert.
    - id: encoding
      type: System.Text.Encoding
      description: The encoding to use for decoding the Base64 string.
    return:
      type: System.String
      description: The original string represented by the Base64 encoded string.
    content.vb: Public Shared Function FromBase64(base64 As String, encoding As Encoding) As String
  overload: Refinity.Strings.StringsUtility.FromBase64*
  nameWithType.vb: StringsUtility.FromBase64(String, Encoding)
  fullName.vb: Refinity.Strings.StringsUtility.FromBase64(String, System.Text.Encoding)
  name.vb: FromBase64(String, Encoding)
references:
- uid: Refinity.Strings
  commentId: N:Refinity.Strings
  href: Refinity.html
  name: Refinity.Strings
  nameWithType: Refinity.Strings
  fullName: Refinity.Strings
  spec.csharp:
  - uid: Refinity
    name: Refinity
    href: Refinity.html
  - name: .
  - uid: Refinity.Strings
    name: Strings
    href: Refinity.Strings.html
  spec.vb:
  - uid: Refinity
    name: Refinity
    href: Refinity.html
  - name: .
  - uid: Refinity.Strings
    name: Strings
    href: Refinity.Strings.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Refinity.Strings.StringsUtility.RemoveWhitespace*
  commentId: Overload:Refinity.Strings.StringsUtility.RemoveWhitespace
  href: Refinity.Strings.StringsUtility.html#Refinity_Strings_StringsUtility_RemoveWhitespace_System_String_
  name: RemoveWhitespace
  nameWithType: StringsUtility.RemoveWhitespace
  fullName: Refinity.Strings.StringsUtility.RemoveWhitespace
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Refinity.Strings.StringsUtility.RemoveNewLines*
  commentId: Overload:Refinity.Strings.StringsUtility.RemoveNewLines
  href: Refinity.Strings.StringsUtility.html#Refinity_Strings_StringsUtility_RemoveNewLines_System_String_
  name: RemoveNewLines
  nameWithType: StringsUtility.RemoveNewLines
  fullName: Refinity.Strings.StringsUtility.RemoveNewLines
- uid: Refinity.Strings.StringsUtility.RemoveTabs*
  commentId: Overload:Refinity.Strings.StringsUtility.RemoveTabs
  href: Refinity.Strings.StringsUtility.html#Refinity_Strings_StringsUtility_RemoveTabs_System_String_
  name: RemoveTabs
  nameWithType: StringsUtility.RemoveTabs
  fullName: Refinity.Strings.StringsUtility.RemoveTabs
- uid: Refinity.Strings.StringsUtility.RemoveHTMLTags*
  commentId: Overload:Refinity.Strings.StringsUtility.RemoveHTMLTags
  href: Refinity.Strings.StringsUtility.html#Refinity_Strings_StringsUtility_RemoveHTMLTags_System_String_
  name: RemoveHTMLTags
  nameWithType: StringsUtility.RemoveHTMLTags
  fullName: Refinity.Strings.StringsUtility.RemoveHTMLTags
- uid: Refinity.Strings.StringsUtility.Reverse*
  commentId: Overload:Refinity.Strings.StringsUtility.Reverse
  href: Refinity.Strings.StringsUtility.html#Refinity_Strings_StringsUtility_Reverse_System_String_
  name: Reverse
  nameWithType: StringsUtility.Reverse
  fullName: Refinity.Strings.StringsUtility.Reverse
- uid: Refinity.Strings.StringsUtility.Truncate*
  commentId: Overload:Refinity.Strings.StringsUtility.Truncate
  href: Refinity.Strings.StringsUtility.html#Refinity_Strings_StringsUtility_Truncate_System_String_System_Int32_
  name: Truncate
  nameWithType: StringsUtility.Truncate
  fullName: Refinity.Strings.StringsUtility.Truncate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Refinity.Strings.StringsUtility.IsPalindrome*
  commentId: Overload:Refinity.Strings.StringsUtility.IsPalindrome
  href: Refinity.Strings.StringsUtility.html#Refinity_Strings_StringsUtility_IsPalindrome_System_String_
  name: IsPalindrome
  nameWithType: StringsUtility.IsPalindrome
  fullName: Refinity.Strings.StringsUtility.IsPalindrome
- uid: Refinity.Strings.StringsUtility.SplitCamelCase*
  commentId: Overload:Refinity.Strings.StringsUtility.SplitCamelCase
  href: Refinity.Strings.StringsUtility.html#Refinity_Strings_StringsUtility_SplitCamelCase_System_String_
  name: SplitCamelCase
  nameWithType: StringsUtility.SplitCamelCase
  fullName: Refinity.Strings.StringsUtility.SplitCamelCase
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Refinity.Strings.StringsUtility.ToPascalCase*
  commentId: Overload:Refinity.Strings.StringsUtility.ToPascalCase
  href: Refinity.Strings.StringsUtility.html#Refinity_Strings_StringsUtility_ToPascalCase_System_String_
  name: ToPascalCase
  nameWithType: StringsUtility.ToPascalCase
  fullName: Refinity.Strings.StringsUtility.ToPascalCase
- uid: Refinity.Strings.StringsUtility.ToBase64*
  commentId: Overload:Refinity.Strings.StringsUtility.ToBase64
  href: Refinity.Strings.StringsUtility.html#Refinity_Strings_StringsUtility_ToBase64_System_String_
  name: ToBase64
  nameWithType: StringsUtility.ToBase64
  fullName: Refinity.Strings.StringsUtility.ToBase64
- uid: Refinity.Strings.StringsUtility.FromBase64*
  commentId: Overload:Refinity.Strings.StringsUtility.FromBase64
  href: Refinity.Strings.StringsUtility.html#Refinity_Strings_StringsUtility_FromBase64_System_String_
  name: FromBase64
  nameWithType: StringsUtility.FromBase64
  fullName: Refinity.Strings.StringsUtility.FromBase64
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
