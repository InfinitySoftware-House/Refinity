### YamlMime:ManagedReference
items:
- uid: Refinity.Date.DateUtility
  commentId: T:Refinity.Date.DateUtility
  id: DateUtility
  parent: Refinity.Date
  children:
  - Refinity.Date.DateUtility.Add(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Refinity.Date.DateUtility.CalculateAge(System.DateTime)
  - Refinity.Date.DateUtility.DeserializeDateTime(System.String)
  - Refinity.Date.DateUtility.FirstDayOfMonth(System.DateTime)
  - Refinity.Date.DateUtility.GetDateRange(System.DateTime,System.Int32,System.Boolean)
  - Refinity.Date.DateUtility.GetDateRangeFromWeekNumber(System.Int32)
  - Refinity.Date.DateUtility.GetDifference(System.DateTime,System.DateTime)
  - Refinity.Date.DateUtility.GetWeekNumber(System.DateTime)
  - Refinity.Date.DateUtility.LastDayOfMonth(System.DateTime)
  - Refinity.Date.DateUtility.QuarterFromMonth(Months)
  - Refinity.Date.DateUtility.QuarterFromMonth(System.DateTime)
  - Refinity.Date.DateUtility.QuarterFromMonth(System.Int32)
  - Refinity.Date.DateUtility.QuarterlyFromMonth(Months)
  - Refinity.Date.DateUtility.QuarterlyFromMonth(System.DateTime)
  - Refinity.Date.DateUtility.QuarterlyFromMonth(System.Int32)
  - Refinity.Date.DateUtility.SerializeDateTime(System.DateTime)
  - Refinity.Date.DateUtility.Subtract(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Refinity.Date.DateUtility.ToDateTime(System.String)
  langs:
  - csharp
  - vb
  name: DateUtility
  nameWithType: DateUtility
  fullName: Refinity.Date.DateUtility
  type: Class
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: DateUtility
    path: Refinity/Date/DateUtility.cs
    startLine: 4
  assemblies:
  - Refinity
  namespace: Refinity.Date
  syntax:
    content: public static class DateUtility
    content.vb: Public Module DateUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Refinity.Date.DateUtility.Add(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Refinity.Date.DateUtility.Add(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Add(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: Add(DateTime, int, int, int, int, int, int)
  nameWithType: DateUtility.Add(DateTime, int, int, int, int, int, int)
  fullName: Refinity.Date.DateUtility.Add(System.DateTime, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: Add
    path: Refinity/Date/DateUtility.cs
    startLine: 18
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Adds a specified number of years, months, days, hours, minutes, and seconds to the given DateTime value. TEST TEST TEST
  example: []
  syntax:
    content: public static DateTime Add(this DateTime value, int years = 0, int months = 0, int days = 0, int hours = 0, int minutes = 0, int seconds = 0)
    parameters:
    - id: value
      type: System.DateTime
      description: The DateTime value to which the specified time interval should be added.
    - id: years
      type: System.Int32
      description: The number of years to add. The default value is 0.
    - id: months
      type: System.Int32
      description: The number of months to add. The default value is 0.
    - id: days
      type: System.Int32
      description: The number of days to add. The default value is 0.
    - id: hours
      type: System.Int32
      description: The number of hours to add. The default value is 0.
    - id: minutes
      type: System.Int32
      description: The number of minutes to add. The default value is 0.
    - id: seconds
      type: System.Int32
      description: The number of seconds to add. The default value is 0.
    return:
      type: System.DateTime
      description: A new DateTime value that is the result of adding the specified time interval to the original DateTime value.
    content.vb: Public Shared Function Add(value As Date, years As Integer = 0, months As Integer = 0, days As Integer = 0, hours As Integer = 0, minutes As Integer = 0, seconds As Integer = 0) As Date
  overload: Refinity.Date.DateUtility.Add*
  nameWithType.vb: DateUtility.Add(Date, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: Refinity.Date.DateUtility.Add(Date, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: Add(Date, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: Refinity.Date.DateUtility.CalculateAge(System.DateTime)
  commentId: M:Refinity.Date.DateUtility.CalculateAge(System.DateTime)
  id: CalculateAge(System.DateTime)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: CalculateAge(DateTime)
  nameWithType: DateUtility.CalculateAge(DateTime)
  fullName: Refinity.Date.DateUtility.CalculateAge(System.DateTime)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: CalculateAge
    path: Refinity/Date/DateUtility.cs
    startLine: 28
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Calculates the age based on the provided birth date.
  example: []
  syntax:
    content: public static int CalculateAge(this DateTime birthDate)
    parameters:
    - id: birthDate
      type: System.DateTime
      description: The birth date.
    return:
      type: System.Int32
      description: The calculated age.
    content.vb: Public Shared Function CalculateAge(birthDate As Date) As Integer
  overload: Refinity.Date.DateUtility.CalculateAge*
  nameWithType.vb: DateUtility.CalculateAge(Date)
  fullName.vb: Refinity.Date.DateUtility.CalculateAge(Date)
  name.vb: CalculateAge(Date)
- uid: Refinity.Date.DateUtility.DeserializeDateTime(System.String)
  commentId: M:Refinity.Date.DateUtility.DeserializeDateTime(System.String)
  id: DeserializeDateTime(System.String)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: DeserializeDateTime(string)
  nameWithType: DateUtility.DeserializeDateTime(string)
  fullName: Refinity.Date.DateUtility.DeserializeDateTime(string)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: DeserializeDateTime
    path: Refinity/Date/DateUtility.cs
    startLine: 45
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Deserializes a string representation of a DateTime object.
  example: []
  syntax:
    content: public static DateTime DeserializeDateTime(this string dateTimeString)
    parameters:
    - id: dateTimeString
      type: System.String
      description: The string representation of the DateTime object.
    return:
      type: System.DateTime
      description: The deserialized DateTime object.
    content.vb: Public Shared Function DeserializeDateTime(dateTimeString As String) As Date
  overload: Refinity.Date.DateUtility.DeserializeDateTime*
  nameWithType.vb: DateUtility.DeserializeDateTime(String)
  fullName.vb: Refinity.Date.DateUtility.DeserializeDateTime(String)
  name.vb: DeserializeDateTime(String)
- uid: Refinity.Date.DateUtility.FirstDayOfMonth(System.DateTime)
  commentId: M:Refinity.Date.DateUtility.FirstDayOfMonth(System.DateTime)
  id: FirstDayOfMonth(System.DateTime)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: FirstDayOfMonth(DateTime)
  nameWithType: DateUtility.FirstDayOfMonth(DateTime)
  fullName: Refinity.Date.DateUtility.FirstDayOfMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: FirstDayOfMonth
    path: Refinity/Date/DateUtility.cs
    startLine: 69
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Returns the first day of the month for the specified DateTime value.
  example: []
  syntax:
    content: public static DateTime FirstDayOfMonth(this DateTime value)
    parameters:
    - id: value
      type: System.DateTime
      description: The DateTime value.
    return:
      type: System.DateTime
      description: The first day of the month.
    content.vb: Public Shared Function FirstDayOfMonth(value As Date) As Date
  overload: Refinity.Date.DateUtility.FirstDayOfMonth*
  nameWithType.vb: DateUtility.FirstDayOfMonth(Date)
  fullName.vb: Refinity.Date.DateUtility.FirstDayOfMonth(Date)
  name.vb: FirstDayOfMonth(Date)
- uid: Refinity.Date.DateUtility.GetDateRange(System.DateTime,System.Int32,System.Boolean)
  commentId: M:Refinity.Date.DateUtility.GetDateRange(System.DateTime,System.Int32,System.Boolean)
  id: GetDateRange(System.DateTime,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: GetDateRange(DateTime, int, bool)
  nameWithType: DateUtility.GetDateRange(DateTime, int, bool)
  fullName: Refinity.Date.DateUtility.GetDateRange(System.DateTime, int, bool)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: GetDateRange
    path: Refinity/Date/DateUtility.cs
    startLine: 74
  assemblies:
  - Refinity
  namespace: Refinity.Date
  syntax:
    content: public static DateRangeModel GetDateRange(this DateTime startDate, int numberOfMonths, bool startToFirst = false)
    parameters:
    - id: startDate
      type: System.DateTime
    - id: numberOfMonths
      type: System.Int32
    - id: startToFirst
      type: System.Boolean
    return:
      type: DateRangeModel
    content.vb: Public Shared Function GetDateRange(startDate As Date, numberOfMonths As Integer, startToFirst As Boolean = False) As DateRangeModel
  overload: Refinity.Date.DateUtility.GetDateRange*
  nameWithType.vb: DateUtility.GetDateRange(Date, Integer, Boolean)
  fullName.vb: Refinity.Date.DateUtility.GetDateRange(Date, Integer, Boolean)
  name.vb: GetDateRange(Date, Integer, Boolean)
- uid: Refinity.Date.DateUtility.GetWeekNumber(System.DateTime)
  commentId: M:Refinity.Date.DateUtility.GetWeekNumber(System.DateTime)
  id: GetWeekNumber(System.DateTime)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: GetWeekNumber(DateTime)
  nameWithType: DateUtility.GetWeekNumber(DateTime)
  fullName: Refinity.Date.DateUtility.GetWeekNumber(System.DateTime)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: GetWeekNumber
    path: Refinity/Date/DateUtility.cs
    startLine: 107
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Gets the week number of the specified date.
  example: []
  syntax:
    content: public static int GetWeekNumber(this DateTime value)
    parameters:
    - id: value
      type: System.DateTime
      description: The date value.
    return:
      type: System.Int32
      description: The week number of the specified date.
    content.vb: Public Shared Function GetWeekNumber(value As Date) As Integer
  overload: Refinity.Date.DateUtility.GetWeekNumber*
  nameWithType.vb: DateUtility.GetWeekNumber(Date)
  fullName.vb: Refinity.Date.DateUtility.GetWeekNumber(Date)
  name.vb: GetWeekNumber(Date)
- uid: Refinity.Date.DateUtility.GetDateRangeFromWeekNumber(System.Int32)
  commentId: M:Refinity.Date.DateUtility.GetDateRangeFromWeekNumber(System.Int32)
  id: GetDateRangeFromWeekNumber(System.Int32)
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: GetDateRangeFromWeekNumber(int)
  nameWithType: DateUtility.GetDateRangeFromWeekNumber(int)
  fullName: Refinity.Date.DateUtility.GetDateRangeFromWeekNumber(int)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: GetDateRangeFromWeekNumber
    path: Refinity/Date/DateUtility.cs
    startLine: 117
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Gets the date range (start and end dates) for a given week number.
  example: []
  syntax:
    content: public static DateTime[] GetDateRangeFromWeekNumber(int weekNumber)
    parameters:
    - id: weekNumber
      type: System.Int32
      description: The week number.
    return:
      type: System.DateTime[]
      description: An array of DateTime objects representing the start and end dates of the week.
    content.vb: Public Shared Function GetDateRangeFromWeekNumber(weekNumber As Integer) As Date()
  overload: Refinity.Date.DateUtility.GetDateRangeFromWeekNumber*
  nameWithType.vb: DateUtility.GetDateRangeFromWeekNumber(Integer)
  fullName.vb: Refinity.Date.DateUtility.GetDateRangeFromWeekNumber(Integer)
  name.vb: GetDateRangeFromWeekNumber(Integer)
- uid: Refinity.Date.DateUtility.GetDifference(System.DateTime,System.DateTime)
  commentId: M:Refinity.Date.DateUtility.GetDifference(System.DateTime,System.DateTime)
  id: GetDifference(System.DateTime,System.DateTime)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: GetDifference(DateTime, DateTime)
  nameWithType: DateUtility.GetDifference(DateTime, DateTime)
  fullName: Refinity.Date.DateUtility.GetDifference(System.DateTime, System.DateTime)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: GetDifference
    path: Refinity/Date/DateUtility.cs
    startLine: 130
  assemblies:
  - Refinity
  namespace: Refinity.Date
  syntax:
    content: public static DateDifference GetDifference(this DateTime from, DateTime to)
    parameters:
    - id: from
      type: System.DateTime
    - id: to
      type: System.DateTime
    return:
      type: Refinity.Date.DateDifference
    content.vb: Public Shared Function GetDifference(from As Date, [to] As Date) As DateDifference
  overload: Refinity.Date.DateUtility.GetDifference*
  nameWithType.vb: DateUtility.GetDifference(Date, Date)
  fullName.vb: Refinity.Date.DateUtility.GetDifference(Date, Date)
  name.vb: GetDifference(Date, Date)
- uid: Refinity.Date.DateUtility.LastDayOfMonth(System.DateTime)
  commentId: M:Refinity.Date.DateUtility.LastDayOfMonth(System.DateTime)
  id: LastDayOfMonth(System.DateTime)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: LastDayOfMonth(DateTime)
  nameWithType: DateUtility.LastDayOfMonth(DateTime)
  fullName: Refinity.Date.DateUtility.LastDayOfMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: LastDayOfMonth
    path: Refinity/Date/DateUtility.cs
    startLine: 151
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Returns the last day of the month for the specified DateTime value.
  example: []
  syntax:
    content: public static DateTime LastDayOfMonth(this DateTime value)
    parameters:
    - id: value
      type: System.DateTime
      description: The DateTime value.
    return:
      type: System.DateTime
      description: The last day of the month.
    content.vb: Public Shared Function LastDayOfMonth(value As Date) As Date
  overload: Refinity.Date.DateUtility.LastDayOfMonth*
  nameWithType.vb: DateUtility.LastDayOfMonth(Date)
  fullName.vb: Refinity.Date.DateUtility.LastDayOfMonth(Date)
  name.vb: LastDayOfMonth(Date)
- uid: Refinity.Date.DateUtility.QuarterlyFromMonth(System.DateTime)
  commentId: M:Refinity.Date.DateUtility.QuarterlyFromMonth(System.DateTime)
  id: QuarterlyFromMonth(System.DateTime)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: QuarterlyFromMonth(DateTime)
  nameWithType: DateUtility.QuarterlyFromMonth(DateTime)
  fullName: Refinity.Date.DateUtility.QuarterlyFromMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: QuarterlyFromMonth
    path: Refinity/Date/DateUtility.cs
    startLine: 161
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Calculates the quarterly value from the given month.
  example: []
  syntax:
    content: public static int QuarterlyFromMonth(this DateTime value)
    parameters:
    - id: value
      type: System.DateTime
      description: The month value.
    return:
      type: System.Int32
      description: The quarterly value.
    content.vb: Public Shared Function QuarterlyFromMonth(value As Date) As Integer
  overload: Refinity.Date.DateUtility.QuarterlyFromMonth*
  nameWithType.vb: DateUtility.QuarterlyFromMonth(Date)
  fullName.vb: Refinity.Date.DateUtility.QuarterlyFromMonth(Date)
  name.vb: QuarterlyFromMonth(Date)
- uid: Refinity.Date.DateUtility.QuarterlyFromMonth(Months)
  commentId: M:Refinity.Date.DateUtility.QuarterlyFromMonth(Months)
  id: QuarterlyFromMonth(Months)
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: QuarterlyFromMonth(Months)
  nameWithType: DateUtility.QuarterlyFromMonth(Months)
  fullName: Refinity.Date.DateUtility.QuarterlyFromMonth(Months)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: QuarterlyFromMonth
    path: Refinity/Date/DateUtility.cs
    startLine: 171
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Calculates the quarterly value from a given month.
  example: []
  syntax:
    content: public static int QuarterlyFromMonth(Months value)
    parameters:
    - id: value
      type: Months
      description: The month value.
    return:
      type: System.Int32
      description: The quarterly value.
    content.vb: Public Shared Function QuarterlyFromMonth(value As Months) As Integer
  overload: Refinity.Date.DateUtility.QuarterlyFromMonth*
- uid: Refinity.Date.DateUtility.QuarterlyFromMonth(System.Int32)
  commentId: M:Refinity.Date.DateUtility.QuarterlyFromMonth(System.Int32)
  id: QuarterlyFromMonth(System.Int32)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: QuarterlyFromMonth(int)
  nameWithType: DateUtility.QuarterlyFromMonth(int)
  fullName: Refinity.Date.DateUtility.QuarterlyFromMonth(int)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: QuarterlyFromMonth
    path: Refinity/Date/DateUtility.cs
    startLine: 181
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Calculates the quarterly value from a given month.
  example: []
  syntax:
    content: public static int QuarterlyFromMonth(this int value)
    parameters:
    - id: value
      type: System.Int32
      description: The month value.
    return:
      type: System.Int32
      description: The quarterly value.
    content.vb: Public Shared Function QuarterlyFromMonth(value As Integer) As Integer
  overload: Refinity.Date.DateUtility.QuarterlyFromMonth*
  nameWithType.vb: DateUtility.QuarterlyFromMonth(Integer)
  fullName.vb: Refinity.Date.DateUtility.QuarterlyFromMonth(Integer)
  name.vb: QuarterlyFromMonth(Integer)
- uid: Refinity.Date.DateUtility.QuarterFromMonth(System.DateTime)
  commentId: M:Refinity.Date.DateUtility.QuarterFromMonth(System.DateTime)
  id: QuarterFromMonth(System.DateTime)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: QuarterFromMonth(DateTime)
  nameWithType: DateUtility.QuarterFromMonth(DateTime)
  fullName: Refinity.Date.DateUtility.QuarterFromMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: QuarterFromMonth
    path: Refinity/Date/DateUtility.cs
    startLine: 195
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Calculates the quarter from the given month.
  example: []
  syntax:
    content: public static int QuarterFromMonth(this DateTime value)
    parameters:
    - id: value
      type: System.DateTime
      description: The month value.
    return:
      type: System.Int32
      description: The quarter corresponding to the given month.
    content.vb: Public Shared Function QuarterFromMonth(value As Date) As Integer
  overload: Refinity.Date.DateUtility.QuarterFromMonth*
  nameWithType.vb: DateUtility.QuarterFromMonth(Date)
  fullName.vb: Refinity.Date.DateUtility.QuarterFromMonth(Date)
  name.vb: QuarterFromMonth(Date)
- uid: Refinity.Date.DateUtility.QuarterFromMonth(Months)
  commentId: M:Refinity.Date.DateUtility.QuarterFromMonth(Months)
  id: QuarterFromMonth(Months)
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: QuarterFromMonth(Months)
  nameWithType: DateUtility.QuarterFromMonth(Months)
  fullName: Refinity.Date.DateUtility.QuarterFromMonth(Months)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: QuarterFromMonth
    path: Refinity/Date/DateUtility.cs
    startLine: 205
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Calculates the quarter from a given month.
  example: []
  syntax:
    content: public static int QuarterFromMonth(Months value)
    parameters:
    - id: value
      type: Months
      description: The month value.
    return:
      type: System.Int32
      description: The quarter corresponding to the given month.
    content.vb: Public Shared Function QuarterFromMonth(value As Months) As Integer
  overload: Refinity.Date.DateUtility.QuarterFromMonth*
- uid: Refinity.Date.DateUtility.QuarterFromMonth(System.Int32)
  commentId: M:Refinity.Date.DateUtility.QuarterFromMonth(System.Int32)
  id: QuarterFromMonth(System.Int32)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: QuarterFromMonth(int)
  nameWithType: DateUtility.QuarterFromMonth(int)
  fullName: Refinity.Date.DateUtility.QuarterFromMonth(int)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: QuarterFromMonth
    path: Refinity/Date/DateUtility.cs
    startLine: 215
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Calculates the quarter from a given month value.
  example: []
  syntax:
    content: public static int QuarterFromMonth(this int value)
    parameters:
    - id: value
      type: System.Int32
      description: The month value.
    return:
      type: System.Int32
      description: The quarter corresponding to the month value.
    content.vb: Public Shared Function QuarterFromMonth(value As Integer) As Integer
  overload: Refinity.Date.DateUtility.QuarterFromMonth*
  nameWithType.vb: DateUtility.QuarterFromMonth(Integer)
  fullName.vb: Refinity.Date.DateUtility.QuarterFromMonth(Integer)
  name.vb: QuarterFromMonth(Integer)
- uid: Refinity.Date.DateUtility.Subtract(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Refinity.Date.DateUtility.Subtract(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Subtract(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: Subtract(DateTime, int, int, int, int, int, int)
  nameWithType: DateUtility.Subtract(DateTime, int, int, int, int, int, int)
  fullName: Refinity.Date.DateUtility.Subtract(System.DateTime, int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: Subtract
    path: Refinity/Date/DateUtility.cs
    startLine: 235
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Subtracts a specified number of years, months, days, hours, minutes, and seconds from the given DateTime value.
  example: []
  syntax:
    content: public static DateTime Subtract(this DateTime value, int years = 0, int months = 0, int days = 0, int hours = 0, int minutes = 0, int seconds = 0)
    parameters:
    - id: value
      type: System.DateTime
      description: The DateTime value to subtract from.
    - id: years
      type: System.Int32
      description: The number of years to subtract. Default is 0.
    - id: months
      type: System.Int32
      description: The number of months to subtract. Default is 0.
    - id: days
      type: System.Int32
      description: The number of days to subtract. Default is 0.
    - id: hours
      type: System.Int32
      description: The number of hours to subtract. Default is 0.
    - id: minutes
      type: System.Int32
      description: The number of minutes to subtract. Default is 0.
    - id: seconds
      type: System.Int32
      description: The number of seconds to subtract. Default is 0.
    return:
      type: System.DateTime
      description: A new DateTime value that is the result of subtracting the specified years, months, days, hours, minutes, and seconds from the given DateTime value.
    content.vb: Public Shared Function Subtract(value As Date, years As Integer = 0, months As Integer = 0, days As Integer = 0, hours As Integer = 0, minutes As Integer = 0, seconds As Integer = 0) As Date
  overload: Refinity.Date.DateUtility.Subtract*
  nameWithType.vb: DateUtility.Subtract(Date, Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: Refinity.Date.DateUtility.Subtract(Date, Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: Subtract(Date, Integer, Integer, Integer, Integer, Integer, Integer)
- uid: Refinity.Date.DateUtility.SerializeDateTime(System.DateTime)
  commentId: M:Refinity.Date.DateUtility.SerializeDateTime(System.DateTime)
  id: SerializeDateTime(System.DateTime)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: SerializeDateTime(DateTime)
  nameWithType: DateUtility.SerializeDateTime(DateTime)
  fullName: Refinity.Date.DateUtility.SerializeDateTime(System.DateTime)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: SerializeDateTime
    path: Refinity/Date/DateUtility.cs
    startLine: 245
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Serializes a DateTime object into a JSON string representation.
  example: []
  syntax:
    content: public static string SerializeDateTime(this DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: The DateTime object to be serialized.
    return:
      type: System.String
      description: A JSON string representation of the DateTime object.
    content.vb: Public Shared Function SerializeDateTime(dateTime As Date) As String
  overload: Refinity.Date.DateUtility.SerializeDateTime*
  nameWithType.vb: DateUtility.SerializeDateTime(Date)
  fullName.vb: Refinity.Date.DateUtility.SerializeDateTime(Date)
  name.vb: SerializeDateTime(Date)
- uid: Refinity.Date.DateUtility.ToDateTime(System.String)
  commentId: M:Refinity.Date.DateUtility.ToDateTime(System.String)
  id: ToDateTime(System.String)
  isExtensionMethod: true
  parent: Refinity.Date.DateUtility
  langs:
  - csharp
  - vb
  name: ToDateTime(string)
  nameWithType: DateUtility.ToDateTime(string)
  fullName: Refinity.Date.DateUtility.ToDateTime(string)
  type: Method
  source:
    remote:
      path: Refinity/Date/DateUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: ToDateTime
    path: Refinity/Date/DateUtility.cs
    startLine: 270
  assemblies:
  - Refinity
  namespace: Refinity.Date
  summary: Converts a string value to a nullable DateTime object.
  example: []
  syntax:
    content: public static DateTime? ToDateTime(this string value)
    parameters:
    - id: value
      type: System.String
      description: The string value to convert.
    return:
      type: System.Nullable{System.DateTime}
      description: A nullable DateTime object representing the converted value, or null if the conversion fails.
    content.vb: Public Shared Function ToDateTime(value As String) As Date?
  overload: Refinity.Date.DateUtility.ToDateTime*
  nameWithType.vb: DateUtility.ToDateTime(String)
  fullName.vb: Refinity.Date.DateUtility.ToDateTime(String)
  name.vb: ToDateTime(String)
references:
- uid: Refinity.Date
  commentId: N:Refinity.Date
  href: Refinity.html
  name: Refinity.Date
  nameWithType: Refinity.Date
  fullName: Refinity.Date
  spec.csharp:
  - uid: Refinity
    name: Refinity
    href: Refinity.html
  - name: .
  - uid: Refinity.Date
    name: Date
    href: Refinity.Date.html
  spec.vb:
  - uid: Refinity
    name: Refinity
    href: Refinity.html
  - name: .
  - uid: Refinity.Date
    name: Date
    href: Refinity.Date.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Refinity.Date.DateUtility.Add*
  commentId: Overload:Refinity.Date.DateUtility.Add
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_Add_System_DateTime_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: Add
  nameWithType: DateUtility.Add
  fullName: Refinity.Date.DateUtility.Add
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Refinity.Date.DateUtility.CalculateAge*
  commentId: Overload:Refinity.Date.DateUtility.CalculateAge
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_CalculateAge_System_DateTime_
  name: CalculateAge
  nameWithType: DateUtility.CalculateAge
  fullName: Refinity.Date.DateUtility.CalculateAge
- uid: Refinity.Date.DateUtility.DeserializeDateTime*
  commentId: Overload:Refinity.Date.DateUtility.DeserializeDateTime
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_DeserializeDateTime_System_String_
  name: DeserializeDateTime
  nameWithType: DateUtility.DeserializeDateTime
  fullName: Refinity.Date.DateUtility.DeserializeDateTime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Refinity.Date.DateUtility.FirstDayOfMonth*
  commentId: Overload:Refinity.Date.DateUtility.FirstDayOfMonth
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_FirstDayOfMonth_System_DateTime_
  name: FirstDayOfMonth
  nameWithType: DateUtility.FirstDayOfMonth
  fullName: Refinity.Date.DateUtility.FirstDayOfMonth
- uid: Refinity.Date.DateUtility.GetDateRange*
  commentId: Overload:Refinity.Date.DateUtility.GetDateRange
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_GetDateRange_System_DateTime_System_Int32_System_Boolean_
  name: GetDateRange
  nameWithType: DateUtility.GetDateRange
  fullName: Refinity.Date.DateUtility.GetDateRange
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: DateRangeModel
  commentId: T:DateRangeModel
  href: DateRangeModel.html
  name: DateRangeModel
  nameWithType: DateRangeModel
  fullName: DateRangeModel
- uid: Refinity.Date.DateUtility.GetWeekNumber*
  commentId: Overload:Refinity.Date.DateUtility.GetWeekNumber
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_GetWeekNumber_System_DateTime_
  name: GetWeekNumber
  nameWithType: DateUtility.GetWeekNumber
  fullName: Refinity.Date.DateUtility.GetWeekNumber
- uid: Refinity.Date.DateUtility.GetDateRangeFromWeekNumber*
  commentId: Overload:Refinity.Date.DateUtility.GetDateRangeFromWeekNumber
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_GetDateRangeFromWeekNumber_System_Int32_
  name: GetDateRangeFromWeekNumber
  nameWithType: DateUtility.GetDateRangeFromWeekNumber
  fullName: Refinity.Date.DateUtility.GetDateRangeFromWeekNumber
- uid: System.DateTime[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime[]
  nameWithType: DateTime[]
  fullName: System.DateTime[]
  nameWithType.vb: Date()
  fullName.vb: Date()
  name.vb: Date()
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: (
  - name: )
- uid: Refinity.Date.DateUtility.GetDifference*
  commentId: Overload:Refinity.Date.DateUtility.GetDifference
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_GetDifference_System_DateTime_System_DateTime_
  name: GetDifference
  nameWithType: DateUtility.GetDifference
  fullName: Refinity.Date.DateUtility.GetDifference
- uid: Refinity.Date.DateDifference
  commentId: T:Refinity.Date.DateDifference
  parent: Refinity.Date
  href: Refinity.Date.DateDifference.html
  name: DateDifference
  nameWithType: DateDifference
  fullName: Refinity.Date.DateDifference
- uid: Refinity.Date.DateUtility.LastDayOfMonth*
  commentId: Overload:Refinity.Date.DateUtility.LastDayOfMonth
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_LastDayOfMonth_System_DateTime_
  name: LastDayOfMonth
  nameWithType: DateUtility.LastDayOfMonth
  fullName: Refinity.Date.DateUtility.LastDayOfMonth
- uid: Refinity.Date.DateUtility.QuarterlyFromMonth*
  commentId: Overload:Refinity.Date.DateUtility.QuarterlyFromMonth
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_QuarterlyFromMonth_System_DateTime_
  name: QuarterlyFromMonth
  nameWithType: DateUtility.QuarterlyFromMonth
  fullName: Refinity.Date.DateUtility.QuarterlyFromMonth
- uid: Months
  commentId: T:Months
  href: Months.html
  name: Months
  nameWithType: Months
  fullName: Months
- uid: Refinity.Date.DateUtility.QuarterFromMonth*
  commentId: Overload:Refinity.Date.DateUtility.QuarterFromMonth
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_QuarterFromMonth_System_DateTime_
  name: QuarterFromMonth
  nameWithType: DateUtility.QuarterFromMonth
  fullName: Refinity.Date.DateUtility.QuarterFromMonth
- uid: Refinity.Date.DateUtility.Subtract*
  commentId: Overload:Refinity.Date.DateUtility.Subtract
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_Subtract_System_DateTime_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: Subtract
  nameWithType: DateUtility.Subtract
  fullName: Refinity.Date.DateUtility.Subtract
- uid: Refinity.Date.DateUtility.SerializeDateTime*
  commentId: Overload:Refinity.Date.DateUtility.SerializeDateTime
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_SerializeDateTime_System_DateTime_
  name: SerializeDateTime
  nameWithType: DateUtility.SerializeDateTime
  fullName: Refinity.Date.DateUtility.SerializeDateTime
- uid: Refinity.Date.DateUtility.ToDateTime*
  commentId: Overload:Refinity.Date.DateUtility.ToDateTime
  href: Refinity.Date.DateUtility.html#Refinity_Date_DateUtility_ToDateTime_System_String_
  name: ToDateTime
  nameWithType: DateUtility.ToDateTime
  fullName: Refinity.Date.DateUtility.ToDateTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
