### YamlMime:ManagedReference
items:
- uid: Refinity.Enums.EnumTemperatureUnits
  commentId: T:Refinity.Enums.EnumTemperatureUnits
  id: EnumTemperatureUnits
  parent: Refinity.Enums
  children:
  - Refinity.Enums.EnumTemperatureUnits.Celsius
  - Refinity.Enums.EnumTemperatureUnits.Fahrenheit
  - Refinity.Enums.EnumTemperatureUnits.Kelvin
  langs:
  - csharp
  - vb
  name: EnumTemperatureUnits
  nameWithType: EnumTemperatureUnits
  fullName: Refinity.Enums.EnumTemperatureUnits
  type: Enum
  source:
    remote:
      path: Refinity/Enums/EnumsUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: EnumTemperatureUnits
    path: Refinity/Enums/EnumsUtility.cs
    startLine: 347
  assemblies:
  - Refinity
  namespace: Refinity.Enums
  summary: Represents the units of temperature.
  example: []
  syntax:
    content: public enum EnumTemperatureUnits
    content.vb: Public Enum EnumTemperatureUnits
  extensionMethods:
  - Refinity.Enums.EnumTemperatureUnits.Refinity.Enums.EnumsUtility.GetDescription``1
- uid: Refinity.Enums.EnumTemperatureUnits.Celsius
  commentId: F:Refinity.Enums.EnumTemperatureUnits.Celsius
  id: Celsius
  parent: Refinity.Enums.EnumTemperatureUnits
  langs:
  - csharp
  - vb
  name: Celsius
  nameWithType: EnumTemperatureUnits.Celsius
  fullName: Refinity.Enums.EnumTemperatureUnits.Celsius
  type: Field
  source:
    remote:
      path: Refinity/Enums/EnumsUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: Celsius
    path: Refinity/Enums/EnumsUtility.cs
    startLine: 349
  assemblies:
  - Refinity
  namespace: Refinity.Enums
  syntax:
    content: Celsius = 0
    return:
      type: Refinity.Enums.EnumTemperatureUnits
- uid: Refinity.Enums.EnumTemperatureUnits.Fahrenheit
  commentId: F:Refinity.Enums.EnumTemperatureUnits.Fahrenheit
  id: Fahrenheit
  parent: Refinity.Enums.EnumTemperatureUnits
  langs:
  - csharp
  - vb
  name: Fahrenheit
  nameWithType: EnumTemperatureUnits.Fahrenheit
  fullName: Refinity.Enums.EnumTemperatureUnits.Fahrenheit
  type: Field
  source:
    remote:
      path: Refinity/Enums/EnumsUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: Fahrenheit
    path: Refinity/Enums/EnumsUtility.cs
    startLine: 352
  assemblies:
  - Refinity
  namespace: Refinity.Enums
  syntax:
    content: Fahrenheit = 1
    return:
      type: Refinity.Enums.EnumTemperatureUnits
- uid: Refinity.Enums.EnumTemperatureUnits.Kelvin
  commentId: F:Refinity.Enums.EnumTemperatureUnits.Kelvin
  id: Kelvin
  parent: Refinity.Enums.EnumTemperatureUnits
  langs:
  - csharp
  - vb
  name: Kelvin
  nameWithType: EnumTemperatureUnits.Kelvin
  fullName: Refinity.Enums.EnumTemperatureUnits.Kelvin
  type: Field
  source:
    remote:
      path: Refinity/Enums/EnumsUtility.cs
      branch: dev
      repo: https://github.com/InfinitySoftware-House/Refinity.git
    id: Kelvin
    path: Refinity/Enums/EnumsUtility.cs
    startLine: 355
  assemblies:
  - Refinity
  namespace: Refinity.Enums
  syntax:
    content: Kelvin = 2
    return:
      type: Refinity.Enums.EnumTemperatureUnits
references:
- uid: Refinity.Enums
  commentId: N:Refinity.Enums
  href: Refinity.html
  name: Refinity.Enums
  nameWithType: Refinity.Enums
  fullName: Refinity.Enums
  spec.csharp:
  - uid: Refinity
    name: Refinity
    href: Refinity.html
  - name: .
  - uid: Refinity.Enums
    name: Enums
    href: Refinity.Enums.html
  spec.vb:
  - uid: Refinity
    name: Refinity
    href: Refinity.html
  - name: .
  - uid: Refinity.Enums
    name: Enums
    href: Refinity.Enums.html
- uid: Refinity.Enums.EnumTemperatureUnits.Refinity.Enums.EnumsUtility.GetDescription``1
  commentId: M:Refinity.Enums.EnumsUtility.GetDescription``1(``0)
  parent: Refinity.Enums.EnumsUtility
  definition: Refinity.Enums.EnumsUtility.GetDescription``1(``0)
  href: Refinity.Enums.EnumsUtility.html#Refinity_Enums_EnumsUtility_GetDescription__1___0_
  name: GetDescription<EnumTemperatureUnits>(EnumTemperatureUnits)
  nameWithType: EnumsUtility.GetDescription<EnumTemperatureUnits>(EnumTemperatureUnits)
  fullName: Refinity.Enums.EnumsUtility.GetDescription<Refinity.Enums.EnumTemperatureUnits>(Refinity.Enums.EnumTemperatureUnits)
  nameWithType.vb: EnumsUtility.GetDescription(Of EnumTemperatureUnits)(EnumTemperatureUnits)
  fullName.vb: Refinity.Enums.EnumsUtility.GetDescription(Of Refinity.Enums.EnumTemperatureUnits)(Refinity.Enums.EnumTemperatureUnits)
  name.vb: GetDescription(Of EnumTemperatureUnits)(EnumTemperatureUnits)
  spec.csharp:
  - uid: Refinity.Enums.EnumsUtility.GetDescription``1(Refinity.Enums.EnumTemperatureUnits)
    name: GetDescription
    href: Refinity.Enums.EnumsUtility.html#Refinity_Enums_EnumsUtility_GetDescription__1___0_
  - name: <
  - uid: Refinity.Enums.EnumTemperatureUnits
    name: EnumTemperatureUnits
    href: Refinity.Enums.EnumTemperatureUnits.html
  - name: '>'
  - name: (
  - uid: Refinity.Enums.EnumTemperatureUnits
    name: EnumTemperatureUnits
    href: Refinity.Enums.EnumTemperatureUnits.html
  - name: )
  spec.vb:
  - uid: Refinity.Enums.EnumsUtility.GetDescription``1(Refinity.Enums.EnumTemperatureUnits)
    name: GetDescription
    href: Refinity.Enums.EnumsUtility.html#Refinity_Enums_EnumsUtility_GetDescription__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Refinity.Enums.EnumTemperatureUnits
    name: EnumTemperatureUnits
    href: Refinity.Enums.EnumTemperatureUnits.html
  - name: )
  - name: (
  - uid: Refinity.Enums.EnumTemperatureUnits
    name: EnumTemperatureUnits
    href: Refinity.Enums.EnumTemperatureUnits.html
  - name: )
- uid: Refinity.Enums.EnumsUtility.GetDescription``1(``0)
  commentId: M:Refinity.Enums.EnumsUtility.GetDescription``1(``0)
  href: Refinity.Enums.EnumsUtility.html#Refinity_Enums_EnumsUtility_GetDescription__1___0_
  name: GetDescription<T>(T)
  nameWithType: EnumsUtility.GetDescription<T>(T)
  fullName: Refinity.Enums.EnumsUtility.GetDescription<T>(T)
  nameWithType.vb: EnumsUtility.GetDescription(Of T)(T)
  fullName.vb: Refinity.Enums.EnumsUtility.GetDescription(Of T)(T)
  name.vb: GetDescription(Of T)(T)
  spec.csharp:
  - uid: Refinity.Enums.EnumsUtility.GetDescription``1(``0)
    name: GetDescription
    href: Refinity.Enums.EnumsUtility.html#Refinity_Enums_EnumsUtility_GetDescription__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Refinity.Enums.EnumsUtility.GetDescription``1(``0)
    name: GetDescription
    href: Refinity.Enums.EnumsUtility.html#Refinity_Enums_EnumsUtility_GetDescription__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Refinity.Enums.EnumsUtility
  commentId: T:Refinity.Enums.EnumsUtility
  parent: Refinity.Enums
  href: Refinity.Enums.EnumsUtility.html
  name: EnumsUtility
  nameWithType: EnumsUtility
  fullName: Refinity.Enums.EnumsUtility
- uid: Refinity.Enums.EnumTemperatureUnits
  commentId: T:Refinity.Enums.EnumTemperatureUnits
  parent: Refinity.Enums
  href: Refinity.Enums.EnumTemperatureUnits.html
  name: EnumTemperatureUnits
  nameWithType: EnumTemperatureUnits
  fullName: Refinity.Enums.EnumTemperatureUnits
